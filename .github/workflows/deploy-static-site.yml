name: WordPress to Static Site Deploy

on:
  schedule:
    - cron: '0 6,18 * * *'  # Twice daily at 6 AM and 6 PM UTC
  workflow_dispatch:        # Manual trigger
  repository_dispatch:      # Webhook trigger
    types: [wordpress-update]

# Prevent concurrent runs of this workflow
concurrency:
  group: wordpress-static-site-deploy
  cancel-in-progress: false  # Don't cancel running jobs, wait for completion

jobs:
  build-and-deploy:
    runs-on: self-hosted  # Changed to self-hosted for Cloudflare Access
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        echo "🔧 Installing Python dependencies..."
        pip install requests beautifulsoup4
        echo "✅ Dependencies installed"
        echo "📋 Installed packages:"
        pip list | grep -E "(requests|beautifulsoup4)"
        
    - name: Test runner environment
      run: |
        echo "🔍 Current working directory: $(pwd)"
        echo "📋 Files in current directory:"
        ls -la
        echo "📄 Looking for key files:"
        ls -la wp_to_static_generator.py || echo "❌ Files not found"
        echo "🐍 Python version and path:"
        python --version
        which python
        echo "🔧 Running comprehensive environment test:"
        python test_runner_env.py
        
    - name: Generate static site
      env:
        WP_AUTH_TOKEN: ${{ secrets.WP_AUTH_TOKEN }}
      run: |
        # Ensure we're in the right directory
        echo "📁 Working from: $(pwd)"
        if [ ! -f "wp_to_static_generator.py" ]; then
          echo "❌ wp_to_static_generator.py not found!"
          ls -la
          exit 1
        fi
        python wp_to_static_generator.py ./static-output
        
    - name: Commit and push static site
      run: |
        # Configure git
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Debug: Show current state
        echo "📋 Initial state:"
        echo "Working directory: $(pwd)"
        echo "Current branch: $(git branch --show-current)"
        echo "Local HEAD: $(git rev-parse HEAD)"
        echo "Remote HEAD: $(git ls-remote origin main | cut -f1)"
        
        # Ensure we're on the latest version of main
        echo "🔄 Syncing with remote repository..."
        git fetch origin
        echo "After fetch - Remote HEAD: $(git rev-parse origin/main)"
        git reset --hard origin/main
        echo "After reset - Local HEAD: $(git rev-parse HEAD)"
        
        # Add static files
        rm -rf public/
        mv ./static-output public/
        
        # Convert absolute URLs to relative for better staging compatibility
        echo "🔄 Converting URLs for staging compatibility..."
        python convert_to_staging.py
        
        # Check if there are changes to commit
        git add public/
        
        if [ -n "$(git diff --cached)" ]; then
          echo "📝 Changes detected, committing..."
          git commit -m "🚀 Auto-update static site - $(date '+%Y-%m-%d %H:%M:%S')"
          
          # Simple push with built-in retry
          echo "📤 Pushing to remote..."
          if git push origin main; then
            echo "✅ Push successful"
          else
            echo "⚠️  Push failed, trying sync and retry..."
            git fetch origin
            
            # Try rebase first
            if git rebase origin/main; then
              echo "📥 Rebase successful, pushing again..."
              git push origin main
            else
              echo "⚠️  Rebase failed, using force push to resolve conflicts..."
              git rebase --abort 2>/dev/null || true
              
              # Reset to origin, regenerate, and force push
              git reset --hard origin/main
              echo "🔄 Regenerating static site after reset..."
              rm -rf public/ ./static-output
              python wp_to_static_generator.py ./static-output
              mv ./static-output public/
              git add public/
              git commit -m "🚀 Auto-update static site - $(date '+%Y-%m-%d %H:%M:%S') [force-resolved]"
              
              # Force push to resolve any conflicts definitively
              echo "💪 Force pushing to resolve all conflicts..."
              git push --force-with-lease origin main
            fi
          fi
          
          echo "✅ Static site updated successfully"
        else
          echo "ℹ️  No changes to commit"
        fi
          
    - name: Notify on success
      if: success()
      run: |
        echo "✅ Static site generated and committed successfully!"
        echo "🌐 Cloudflare Pages will auto-deploy from the 'public' directory"
        echo "📁 Generated files are now in the 'public' directory for Pages deployment"
        
    - name: Notify on failure
      if: failure()
      run: |
        echo "❌ Static site generation or commit failed!"
